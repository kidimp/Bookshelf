spring:
  application:
    name: book-service
  config:
    import: "optional:configserver:http://config-server:8088"
#    import: "optional:configserver:http://localhost:8088"
  cloud:
    consul:
      host: consul
#      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  datasource:
    url: jdbc:postgresql://db:5432/bookshelf
#    url: jdbc:postgresql://localhost:5432/bookshelf
    username: chous
    password: chous
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
  kafka:
    bootstrap-servers: kafka:9092
#    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    metrics:
      enabled: true